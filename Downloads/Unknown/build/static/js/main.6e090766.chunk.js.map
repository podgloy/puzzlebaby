{"version":3,"sources":["App.js","index.js"],"names":["NUM_ROWS","NUM_COLS","boardImage","App","boardRef","useRef","pieces","setPieces","useState","targets","setTargets","completed","setCompleted","useEffect","current","rect","getBoundingClientRect","newTargets","Array","from","length","_","index","id","targetX","left","width","targetY","top","Math","floor","height","newPieces","map","target","_objectSpread","initialX","initialY","random","image","concat","React","createElement","className","ref","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","piece","motion","div","key","position","cursor","drag","includes","dragElastic","initial","x","y","animate","onPointerDown","event","preventDefault","onDragStart","onDragEnd","info","handleDragEnd","find","t","abs","point","prev","p","src","alt","objectFit","rootElement","document","getElementById","ReactDOM","render","StrictMode"],"mappings":"6KAyGA,MAAMA,EAAW,EACXC,EAAW,EACXC,EAAa,uBAEJ,SAASC,IACtB,MAAMC,EAAWC,iBAAO,OACjBC,EAAQC,GAAaC,mBAAS,KAC9BC,EAASC,GAAcF,mBAAS,KAChCG,EAAWC,GAAgBJ,mBAAS,IAE3CK,oBAAU,KACR,GAAIT,EAASU,QAAS,CACpB,MAAMC,EAAOX,EAASU,QAAQE,wBAExBC,EAAaC,MAAMC,KAAK,CAAEC,OAAQpB,EAAWC,GAAY,CAACoB,EAAGC,KAAK,CACtEC,GAAID,EACJE,QAAST,EAAKU,KAAQH,EAAQrB,GAAac,EAAKW,MAAQzB,GACxD0B,QAASZ,EAAKa,IAAMC,KAAKC,MAAMR,EAAQrB,IAAac,EAAKgB,OAAS/B,MAG9DgC,EAAYf,EAAWgB,IAAI,CAACC,EAAQZ,IAAKa,wBAAA,GAC1CD,GAAM,IACTE,SAAUrB,EAAKU,KAAO,IAAOH,EAAQrB,EAAY,GACjDoC,SAAUtB,EAAKa,IAAMC,KAAKS,SAAWvB,EAAKgB,OAC1CQ,MAAK,oBAAAC,OAAsBN,EAAOX,GAAK,EAAC,QACxCG,MAAOX,EAAKW,MAAQzB,EACpB8B,OAAQhB,EAAKgB,OAAS/B,KAGxBU,EAAWO,GACXV,EAAUyB,KAEX,IAgBH,OACES,IAAAC,cAAA,OAAKC,UAAU,mBACbF,IAAAC,cAAA,OACEC,UAAU,QACVC,IAAKxC,EACLyC,MAAO,CACLC,gBAAe,OAAAN,OAAStC,EAAU,KAClC6C,eAAgB,UAChBC,mBAAoB,SACpBC,iBAAkB,eAIrB3C,EAAO2B,IAAKiB,GACXT,IAAAC,cAACS,IAAOC,IAAG,CACTC,IAAKH,EAAM3B,GACXoB,UAAU,QACVE,MAAO,CACLS,SAAU,WACVC,OAAQ,OACR7B,MAAOwB,EAAMxB,MACbK,OAAQmB,EAAMnB,QAEhByB,MAAO7C,EAAU8C,SAASP,EAAM3B,IAChCmC,YAAa,GACbC,QAAS,CAAEC,EAAGV,EAAMd,SAAUyB,EAAGX,EAAMb,UACvCyB,QAAS,CAAEF,EAAGV,EAAMd,SAAUyB,EAAGX,EAAMb,UACvC0B,cAAgBC,GAAUA,EAAMC,iBAChCC,YAAcF,GAAUA,EAAMC,iBAC9BE,UAAWA,CAACH,EAAOI,IA3CLC,EAACL,EAAOI,EAAMlB,KAClC,MAAMhB,EAASzB,EAAQ6D,KAAMC,GAAMA,EAAEhD,KAAO2B,EAAM3B,IAGhDM,KAAK2C,IAAIJ,EAAKK,MAAMb,EAAI1B,EAAOV,SAAW0B,EAAMxB,MAAQ,GACxDG,KAAK2C,IAAIJ,EAAKK,MAAMZ,EAAI3B,EAAOP,SAAWuB,EAAMnB,OAAS,IAEzDnB,EAAc8D,GAAS,IAAIA,EAAMxB,EAAM3B,KACvChB,EAAWmE,GACTA,EAAKzC,IAAK0C,GAAOA,EAAEpD,KAAO2B,EAAM3B,GAAEY,wBAAA,GAAQwC,GAAC,IAAEvC,SAAUF,EAAOV,QAASa,SAAUH,EAAOP,UAAYgD,MAkCtEN,CAAcL,EAAOI,EAAMlB,IAEvDT,IAAAC,cAAA,OACEkC,IAAK1B,EAAMX,MACXsC,IAAG,SAAArC,OAAWU,EAAM3B,IACpBsB,MAAO,CACLnB,MAAO,OACPK,OAAQ,OACR+C,UAAW,gBCzLzB,MAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP1C,IAAAC,cAACD,IAAM2C,WAAU,KACf3C,IAAAC,cAACvC,EAAG,OAEN4E","file":"static/js/main.6e090766.chunk.js","sourcesContent":["// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ขนาดชิ้นจิ๊กซอว์ที่เล็กลง\n\n// const OFFSET_X = 200; // ขยับตำแหน่งแนวนอน\n// const OFFSET_Y = 100; // ขยับตำแหน่งแนวตั้ง\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // 🔥 ขยับกรอบเป้าหมาย\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // 🔥 ขยับกรอบเป้าหมาย\n//     initialX: 500 + Math.random() * 50, // 🔥 จุดเริ่มต้นของจิ๊กซอว์\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`🟢 Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* กรอบเป้าหมาย */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ชิ้นจิ๊กซอว์ */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ✅ ล็อคชิ้นส่วนถ้าลากไปวางแล้ว\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ✅ ใช้ค่าที่อัปเดตล่าสุด\n//           onPointerDown={(event) => event.preventDefault()} // ป้องกัน Safari ลากรูปออก\n//           onDragStart={(event) => event.preventDefault()} // ป้องกันการดึงรูปออกจากเว็บ\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ✅ กำหนดขนาดเป็นสัดส่วน\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\n\nconst NUM_ROWS = 4;\nconst NUM_COLS = 3;\nconst boardImage = \"/img/puzzleboard.png\"; // ✅ ใส่ path ของกระดาน\n\nexport default function App() {\n  const boardRef = useRef(null);\n  const [pieces, setPieces] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [completed, setCompleted] = useState([]);\n\n  useEffect(() => {\n    if (boardRef.current) {\n      const rect = boardRef.current.getBoundingClientRect();\n\n      const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n        id: index,\n        targetX: rect.left + (index % NUM_COLS) * (rect.width / NUM_COLS),\n        targetY: rect.top + Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n      }));\n\n      const newPieces = newTargets.map((target, index) => ({\n        ...target,\n        initialX: rect.left - 250 + (index % NUM_COLS) * 50, // ✅ กระจายชิ้นส่วนด้านซ้าย\n        initialY: rect.top + Math.random() * rect.height,\n        image: `/img/puzzle/piece${target.id + 1}.png`, // ✅ รูปจิ๊กซอว์แต่ละชิ้น\n        width: rect.width / NUM_COLS,\n        height: rect.height / NUM_ROWS,\n      }));\n\n      setTargets(newTargets);\n      setPieces(newPieces);\n    }\n  }, []);\n\n  const handleDragEnd = (event, info, piece) => {\n    const target = targets.find((t) => t.id === piece.id);\n\n    if (\n      Math.abs(info.point.x - target.targetX) < piece.width / 2 &&\n      Math.abs(info.point.y - target.targetY) < piece.height / 2\n    ) {\n      setCompleted((prev) => [...prev, piece.id]);\n      setPieces((prev) =>\n        prev.map((p) => (p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p))\n      );\n    }\n  };\n\n  return (\n    <div className=\"board-container\">\n      <div\n        className=\"board\"\n        ref={boardRef}\n        style={{\n          backgroundImage: `url(${boardImage})`,\n          backgroundSize: \"contain\",\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      />\n\n      {pieces.map((piece) => (\n        <motion.div\n          key={piece.id}\n          className=\"piece\"\n          style={{\n            position: \"absolute\",\n            cursor: \"grab\",\n            width: piece.width,\n            height: piece.height,\n          }}\n          drag={!completed.includes(piece.id)}\n          dragElastic={0.5}\n          initial={{ x: piece.initialX, y: piece.initialY }}\n          animate={{ x: piece.initialX, y: piece.initialY }}\n          onPointerDown={(event) => event.preventDefault()}\n          onDragStart={(event) => event.preventDefault()}\n          onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n        >\n          <img\n            src={piece.image}\n            alt={`piece-${piece.id}`}\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              objectFit: \"contain\",\n            }}\n          />\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}