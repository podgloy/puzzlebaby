{"ast":null,"code":"var _jsxFileName = \"/Users/godploy/Downloads/Unknown/src/App.js\";\n// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ขนาดชิ้นจิ๊กซอว์ที่เล็กลง\n\n// const OFFSET_X = 200; // ขยับตำแหน่งแนวนอน\n// const OFFSET_Y = 100; // ขยับตำแหน่งแนวตั้ง\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // 🔥 ขยับกรอบเป้าหมาย\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // 🔥 ขยับกรอบเป้าหมาย\n//     initialX: 500 + Math.random() * 50, // 🔥 จุดเริ่มต้นของจิ๊กซอว์\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`🟢 Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* กรอบเป้าหมาย */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ชิ้นจิ๊กซอว์ */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ✅ ล็อคชิ้นส่วนถ้าลากไปวางแล้ว\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ✅ ใช้ค่าที่อัปเดตล่าสุด\n//           onPointerDown={(event) => event.preventDefault()} // ป้องกัน Safari ลากรูปออก\n//           onDragStart={(event) => event.preventDefault()} // ป้องกันการดึงรูปออกจากเว็บ\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ✅ กำหนดขนาดเป็นสัดส่วน\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n2;\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const boardImage = \"/img/puzzleboard.png\";\n\n// export default function App() {\n//   const boardRef = useRef(null);\n//   const [pieces, setPieces] = useState([]);\n//   const [targets, setTargets] = useState([]);\n//   const [completed, setCompleted] = useState([]);\n\n//   useEffect(() => {\n//     if (boardRef.current) {\n//       const rect = boardRef.current.getBoundingClientRect();\n\n//       // ✅ คำนวณตำแหน่งของเป้าหมายบนกระดาน\n//       const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//         id: index,\n//         targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n//         targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n//       }));\n\n//       // ✅ กระจายชิ้นส่วนอยู่ด้านซ้ายของกระดาน\n//       const newPieces = newTargets.map((target, index) => ({\n//         ...target,\n//         initialX: rect.left - 200 + (index % 2) * 50, // 🔥 ปรับให้อยู่ฝั่งซ้าย\n//         initialY: rect.top + Math.random() * (rect.height - 100),\n//         image: `/img/puzzle/piece${target.id + 1}.png`,\n//         width: rect.width / NUM_COLS,\n//         height: rect.height / NUM_ROWS,\n//       }));\n\n//       setTargets(newTargets);\n//       setPieces(newPieces);\n//     }\n//   }, []);\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = targets.find((t) => t.id === piece.id);\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < piece.width / 2 &&\n//       Math.abs(info.point.y - target.targetY) < piece.height / 2\n//     ) {\n//       setCompleted((prev) => [...prev, piece.id]);\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div \n//   className=\"board\" \n//   ref={boardRef}\n//   style={{\n//     backgroundImage: `url(${boardImage})`,\n//     backgroundSize: \"contain\",\n//     backgroundPosition: \"center\",\n//     backgroundRepeat: \"no-repeat\",\n//     width: \"600px\", // กำหนดขนาดให้กระดาน\n//     height: \"800px\"\n//   }}\n// > \n// </div>\n\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={piece.id}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: \"grab\",\n//             width: piece.width,\n//             height: piece.height,\n//             zIndex: 10, // ✅ ให้ชิ้นส่วนอยู่ด้านบน\n//           }}\n//           drag={!completed.includes(piece.id)}\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }}\n//           onPointerDown={(event) => event.preventDefault()}\n//           onDragStart={(event) => event.preventDefault()}\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: \"100%\",\n//               height: \"100%\",\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n3;\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\nconst piecesData = [{\n  id: 1,\n  x: 100,\n  y: 150,\n  image: \"/img/piece1.png\"\n}, {\n  id: 2,\n  x: 300,\n  y: 200,\n  image: \"/img/piece2.png\"\n}, {\n  id: 3,\n  x: 500,\n  y: 250,\n  image: \"/img/piece3.png\"\n}\n// เพิ่มชิ้นอื่นๆ ตามตำแหน่งเดิมจากไฟล์ต้นฉบับ\n];\nexport default function App() {\n  const [completed, setCompleted] = useState([]);\n  const handleDragEnd = (event, info, piece) => {\n    setCompleted(prev => [...prev, piece.id]); // บันทึกว่าชิ้นนี้ถูกวาง\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }), piecesData.map(piece => /*#__PURE__*/React.createElement(motion.img, {\n    key: piece.id,\n    src: piece.image,\n    alt: \"piece-\".concat(piece.id),\n    className: \"piece\",\n    initial: {\n      x: piece.x,\n      y: piece.y\n    },\n    drag: true,\n    dragConstraints: {\n      top: 0,\n      left: 0,\n      right: 800,\n      bottom: 600\n    },\n    onDragEnd: (event, info) => handleDragEnd(event, info, piece),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"names":["React","useState","motion","piecesData","id","x","y","image","App","completed","setCompleted","handleDragEnd","event","info","piece","prev","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","img","key","src","alt","concat","initial","drag","dragConstraints","top","left","right","bottom","onDragEnd"],"sources":["/Users/godploy/Downloads/Unknown/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ขนาดชิ้นจิ๊กซอว์ที่เล็กลง\n\n// const OFFSET_X = 200; // ขยับตำแหน่งแนวนอน\n// const OFFSET_Y = 100; // ขยับตำแหน่งแนวตั้ง\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // 🔥 ขยับกรอบเป้าหมาย\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // 🔥 ขยับกรอบเป้าหมาย\n//     initialX: 500 + Math.random() * 50, // 🔥 จุดเริ่มต้นของจิ๊กซอว์\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`🟢 Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* กรอบเป้าหมาย */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ชิ้นจิ๊กซอว์ */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ✅ ล็อคชิ้นส่วนถ้าลากไปวางแล้ว\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ✅ ใช้ค่าที่อัปเดตล่าสุด\n//           onPointerDown={(event) => event.preventDefault()} // ป้องกัน Safari ลากรูปออก\n//           onDragStart={(event) => event.preventDefault()} // ป้องกันการดึงรูปออกจากเว็บ\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ✅ กำหนดขนาดเป็นสัดส่วน\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n2\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const boardImage = \"/img/puzzleboard.png\";\n\n// export default function App() {\n//   const boardRef = useRef(null);\n//   const [pieces, setPieces] = useState([]);\n//   const [targets, setTargets] = useState([]);\n//   const [completed, setCompleted] = useState([]);\n\n//   useEffect(() => {\n//     if (boardRef.current) {\n//       const rect = boardRef.current.getBoundingClientRect();\n\n//       // ✅ คำนวณตำแหน่งของเป้าหมายบนกระดาน\n//       const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//         id: index,\n//         targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n//         targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n//       }));\n\n//       // ✅ กระจายชิ้นส่วนอยู่ด้านซ้ายของกระดาน\n//       const newPieces = newTargets.map((target, index) => ({\n//         ...target,\n//         initialX: rect.left - 200 + (index % 2) * 50, // 🔥 ปรับให้อยู่ฝั่งซ้าย\n//         initialY: rect.top + Math.random() * (rect.height - 100),\n//         image: `/img/puzzle/piece${target.id + 1}.png`,\n//         width: rect.width / NUM_COLS,\n//         height: rect.height / NUM_ROWS,\n//       }));\n\n//       setTargets(newTargets);\n//       setPieces(newPieces);\n//     }\n//   }, []);\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = targets.find((t) => t.id === piece.id);\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < piece.width / 2 &&\n//       Math.abs(info.point.y - target.targetY) < piece.height / 2\n//     ) {\n//       setCompleted((prev) => [...prev, piece.id]);\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div \n//   className=\"board\" \n//   ref={boardRef}\n//   style={{\n//     backgroundImage: `url(${boardImage})`,\n//     backgroundSize: \"contain\",\n//     backgroundPosition: \"center\",\n//     backgroundRepeat: \"no-repeat\",\n//     width: \"600px\", // กำหนดขนาดให้กระดาน\n//     height: \"800px\"\n//   }}\n// > \n// </div>\n\n\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={piece.id}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: \"grab\",\n//             width: piece.width,\n//             height: piece.height,\n//             zIndex: 10, // ✅ ให้ชิ้นส่วนอยู่ด้านบน\n//           }}\n//           drag={!completed.includes(piece.id)}\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }}\n//           onPointerDown={(event) => event.preventDefault()}\n//           onDragStart={(event) => event.preventDefault()}\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: \"100%\",\n//               height: \"100%\",\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n3\n\nimport React, { useState } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\n\nconst piecesData = [\n  { id: 1, x: 100, y: 150, image: \"/img/piece1.png\" },\n  { id: 2, x: 300, y: 200, image: \"/img/piece2.png\" },\n  { id: 3, x: 500, y: 250, image: \"/img/piece3.png\" },\n  // เพิ่มชิ้นอื่นๆ ตามตำแหน่งเดิมจากไฟล์ต้นฉบับ\n];\n\nexport default function App() {\n  const [completed, setCompleted] = useState([]);\n\n  const handleDragEnd = (event, info, piece) => {\n    setCompleted((prev) => [...prev, piece.id]); // บันทึกว่าชิ้นนี้ถูกวาง\n  };\n\n  return (\n    <div className=\"board-container\">\n      {/* 🔥 พื้นหลังเป็นภาพกระดานเต็มจอ */}\n      <div className=\"board\" />\n\n      {/* 🔥 วางชิ้นจิ๊กซอว์ซ้อนทับกัน */}\n      {piecesData.map((piece) => (\n        <motion.img\n          key={piece.id}\n          src={piece.image}\n          alt={`piece-${piece.id}`}\n          className=\"piece\"\n          initial={{ x: piece.x, y: piece.y }}\n          drag\n          dragConstraints={{ top: 0, left: 0, right: 800, bottom: 600 }}\n          onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n        />\n      ))}\n    </div>\n  );\n}\n\n"],"mappings":";AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;;AAED;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,CAAC;AAED,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,cAAc;AAErB,MAAMC,UAAU,GAAG,CACjB;EAAEC,EAAE,EAAE,CAAC;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,KAAK,EAAE;AAAkB,CAAC,EACnD;EAAEH,EAAE,EAAE,CAAC;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,KAAK,EAAE;AAAkB,CAAC,EACnD;EAAEH,EAAE,EAAE,CAAC;EAAEC,CAAC,EAAE,GAAG;EAAEC,CAAC,EAAE,GAAG;EAAEC,KAAK,EAAE;AAAkB;AAClD;AAAA,CACD;AAED,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,aAAa,GAAGA,CAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,KAAK;IAC5CJ,YAAY,CAAEK,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAED,KAAK,CAACV,EAAE,CAAC,CAAC,CAAC,CAAC;EAC/C,CAAC;EAED,oBACEJ,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,iBAAiB;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAE9BvB,KAAA,CAAAgB,aAAA;IAAKC,SAAS,EAAC,OAAO;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,EAGxBpB,UAAU,CAACqB,GAAG,CAAEV,KAAK,iBACpBd,KAAA,CAAAgB,aAAA,CAACd,MAAM,CAACuB,GAAG;IACTC,GAAG,EAAEZ,KAAK,CAACV,EAAG;IACduB,GAAG,EAAEb,KAAK,CAACP,KAAM;IACjBqB,GAAG,WAAAC,MAAA,CAAWf,KAAK,CAACV,EAAE,CAAG;IACzBa,SAAS,EAAC,OAAO;IACjBa,OAAO,EAAE;MAAEzB,CAAC,EAAES,KAAK,CAACT,CAAC;MAAEC,CAAC,EAAEQ,KAAK,CAACR;IAAE,CAAE;IACpCyB,IAAI;IACJC,eAAe,EAAE;MAAEC,GAAG,EAAE,CAAC;MAAEC,IAAI,EAAE,CAAC;MAAEC,KAAK,EAAE,GAAG;MAAEC,MAAM,EAAE;IAAI,CAAE;IAC9DC,SAAS,EAAEA,CAACzB,KAAK,EAAEC,IAAI,KAAKF,aAAa,CAACC,KAAK,EAAEC,IAAI,EAAEC,KAAK,CAAE;IAAAI,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAC/D,CACF,CACE,CAAC;AAEV","ignoreList":[]},"metadata":{},"sourceType":"module"}