{"ast":null,"code":"import _objectSpread from \"/Users/godploy/Downloads/Unknown/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/godploy/Downloads/Unknown/src/App.js\";\n// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ขนาดชิ้นจิ๊กซอว์ที่เล็กลง\n\n// const OFFSET_X = 200; // ขยับตำแหน่งแนวนอน\n// const OFFSET_Y = 100; // ขยับตำแหน่งแนวตั้ง\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // 🔥 ขยับกรอบเป้าหมาย\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // 🔥 ขยับกรอบเป้าหมาย\n//     initialX: 500 + Math.random() * 50, // 🔥 จุดเริ่มต้นของจิ๊กซอว์\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`🟢 Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* กรอบเป้าหมาย */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ชิ้นจิ๊กซอว์ */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ✅ ล็อคชิ้นส่วนถ้าลากไปวางแล้ว\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ✅ ใช้ค่าที่อัปเดตล่าสุด\n//           onPointerDown={(event) => event.preventDefault()} // ป้องกัน Safari ลากรูปออก\n//           onDragStart={(event) => event.preventDefault()} // ป้องกันการดึงรูปออกจากเว็บ\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ✅ กำหนดขนาดเป็นสัดส่วน\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// 2\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const boardImage = \"/img/puzzleboard.png\";\n\n// export default function App() {\n//   const boardRef = useRef(null);\n//   const [pieces, setPieces] = useState([]);\n//   const [targets, setTargets] = useState([]);\n//   const [completed, setCompleted] = useState([]);\n\n//   useEffect(() => {\n//     if (boardRef.current) {\n//       const rect = boardRef.current.getBoundingClientRect();\n\n//       // ✅ คำนวณตำแหน่งของเป้าหมายบนกระดาน\n//       const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//         id: index,\n//         targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n//         targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n//       }));\n\n//       // ✅ กระจายชิ้นส่วนอยู่ด้านซ้ายของกระดาน\n//       const newPieces = newTargets.map((target, index) => ({\n//         ...target,\n//         initialX: rect.left - 200 + (index % 2) * 50, // 🔥 ปรับให้อยู่ฝั่งซ้าย\n//         initialY: rect.top + Math.random() * (rect.height - 100),\n//         image: `/img/puzzle/piece${target.id + 1}.png`,\n//         width: rect.width / NUM_COLS,\n//         height: rect.height / NUM_ROWS,\n//       }));\n\n//       setTargets(newTargets);\n//       setPieces(newPieces);\n//     }\n//   }, []);\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = targets.find((t) => t.id === piece.id);\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < piece.width / 2 &&\n//       Math.abs(info.point.y - target.targetY) < piece.height / 2\n//     ) {\n//       setCompleted((prev) => [...prev, piece.id]);\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div \n//   className=\"board\" \n//   ref={boardRef}\n//   style={{\n//     backgroundImage: `url(${boardImage})`,\n//     backgroundSize: \"contain\",\n//     backgroundPosition: \"center\",\n//     backgroundRepeat: \"no-repeat\",\n//     width: \"600px\", // กำหนดขนาดให้กระดาน\n//     height: \"800px\"\n//   }}\n// > \n// </div>\n\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={piece.id}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: \"grab\",\n//             width: piece.width,\n//             height: piece.height,\n//             zIndex: 10, // ✅ ให้ชิ้นส่วนอยู่ด้านบน\n//           }}\n//           drag={!completed.includes(piece.id)}\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }}\n//           onPointerDown={(event) => event.preventDefault()}\n//           onDragStart={(event) => event.preventDefault()}\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: \"100%\",\n//               height: \"100%\",\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// 3\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\nconst NUM_ROWS = 4;\nconst NUM_COLS = 3;\nconst boardImage = \"/img/artboard6.png\"; // ✅ เปลี่ยนเป็น Path รูปของกระดานจริง\n\nexport default function App() {\n  const boardRef = useRef(null);\n  const [pieces, setPieces] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  useEffect(() => {\n    if (boardRef.current) {\n      const rect = boardRef.current.getBoundingClientRect();\n\n      // ✅ สร้างตำแหน่งของเป้าหมาย (Target Grid)\n      const newTargets = Array.from({\n        length: NUM_ROWS * NUM_COLS\n      }, (_, index) => ({\n        id: index,\n        targetX: index % NUM_COLS * (rect.width / NUM_COLS),\n        targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS)\n      }));\n\n      // ✅ สร้างชิ้นจิ๊กซอว์ให้อยู่ฝั่งซ้าย\n      const newPieces = newTargets.map((target, index) => _objectSpread(_objectSpread({}, target), {}, {\n        initialX: rect.left - 520 + Math.random() * 230,\n        // กระจายฝั่งซ้าย\n        initialY: rect.top - 0 + Math.random() * 200,\n        image: \"/img/puzzle/piece\".concat(index + 1, \".png\"),\n        // ✅ ใส่ path รูปที่ถูกต้อง\n        width: rect.width / NUM_COLS,\n        height: rect.height / NUM_ROWS\n      }));\n      setTargets(newTargets);\n      setPieces(newPieces);\n    }\n  }, []);\n  const handleDragEnd = (event, info, piece) => {\n    const target = targets.find(t => t.id === piece.id);\n    if (Math.abs(info.point.x - target.targetX) < piece.width / 3 && Math.abs(info.point.y - target.targetY) < piece.height / 3) {\n      setCompleted(prev => [...prev, piece.id]);\n      setPieces(prev => prev.map(p => p.id === piece.id ? _objectSpread(_objectSpread({}, p), {}, {\n        initialX: target.targetX,\n        initialY: target.targetY\n      }) : p));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    ref: boardRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: boardImage,\n    alt: \"Puzzle Board\",\n    className: \"board-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 11\n    }\n  })), pieces.map(piece => /*#__PURE__*/React.createElement(motion.div, {\n    onPointerDown: event => event.preventDefault(),\n    onDragStart: event => event.preventDefault(),\n    key: piece.id,\n    className: \"piece\",\n    style: {\n      width: piece.width,\n      height: piece.height,\n      position: \"absolute\",\n      cursor: \"grab\"\n    },\n    drag: !completed.includes(piece.id),\n    dragElastic: 0.5,\n    initial: {\n      x: piece.initialX,\n      y: piece.initialY\n    },\n    animate: {\n      x: piece.initialX,\n      y: piece.initialY\n    },\n    onDragEnd: (event, info) => handleDragEnd(event, info, piece),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: piece.image,\n    alt: \"piece-\".concat(piece.id),\n    style: {\n      width: piece.width,\n      height: piece.height,\n      objectFit: \"contain\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","NUM_ROWS","NUM_COLS","boardImage","App","boardRef","pieces","setPieces","targets","setTargets","completed","setCompleted","current","rect","getBoundingClientRect","newTargets","Array","from","length","_","index","id","targetX","width","targetY","Math","floor","height","newPieces","map","target","_objectSpread","initialX","left","random","initialY","top","image","concat","handleDragEnd","event","info","piece","find","t","abs","point","x","y","prev","p","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","div","onPointerDown","preventDefault","onDragStart","key","style","position","cursor","drag","includes","dragElastic","initial","animate","onDragEnd","objectFit"],"sources":["/Users/godploy/Downloads/Unknown/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ขนาดชิ้นจิ๊กซอว์ที่เล็กลง\n\n// const OFFSET_X = 200; // ขยับตำแหน่งแนวนอน\n// const OFFSET_Y = 100; // ขยับตำแหน่งแนวตั้ง\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // 🔥 ขยับกรอบเป้าหมาย\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // 🔥 ขยับกรอบเป้าหมาย\n//     initialX: 500 + Math.random() * 50, // 🔥 จุดเริ่มต้นของจิ๊กซอว์\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`🟢 Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* กรอบเป้าหมาย */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ชิ้นจิ๊กซอว์ */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ✅ ล็อคชิ้นส่วนถ้าลากไปวางแล้ว\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ✅ ใช้ค่าที่อัปเดตล่าสุด\n//           onPointerDown={(event) => event.preventDefault()} // ป้องกัน Safari ลากรูปออก\n//           onDragStart={(event) => event.preventDefault()} // ป้องกันการดึงรูปออกจากเว็บ\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ✅ กำหนดขนาดเป็นสัดส่วน\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// 2\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const boardImage = \"/img/puzzleboard.png\";\n\n// export default function App() {\n//   const boardRef = useRef(null);\n//   const [pieces, setPieces] = useState([]);\n//   const [targets, setTargets] = useState([]);\n//   const [completed, setCompleted] = useState([]);\n\n//   useEffect(() => {\n//     if (boardRef.current) {\n//       const rect = boardRef.current.getBoundingClientRect();\n\n//       // ✅ คำนวณตำแหน่งของเป้าหมายบนกระดาน\n//       const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//         id: index,\n//         targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n//         targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n//       }));\n\n//       // ✅ กระจายชิ้นส่วนอยู่ด้านซ้ายของกระดาน\n//       const newPieces = newTargets.map((target, index) => ({\n//         ...target,\n//         initialX: rect.left - 200 + (index % 2) * 50, // 🔥 ปรับให้อยู่ฝั่งซ้าย\n//         initialY: rect.top + Math.random() * (rect.height - 100),\n//         image: `/img/puzzle/piece${target.id + 1}.png`,\n//         width: rect.width / NUM_COLS,\n//         height: rect.height / NUM_ROWS,\n//       }));\n\n//       setTargets(newTargets);\n//       setPieces(newPieces);\n//     }\n//   }, []);\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = targets.find((t) => t.id === piece.id);\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < piece.width / 2 &&\n//       Math.abs(info.point.y - target.targetY) < piece.height / 2\n//     ) {\n//       setCompleted((prev) => [...prev, piece.id]);\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div \n//   className=\"board\" \n//   ref={boardRef}\n//   style={{\n//     backgroundImage: `url(${boardImage})`,\n//     backgroundSize: \"contain\",\n//     backgroundPosition: \"center\",\n//     backgroundRepeat: \"no-repeat\",\n//     width: \"600px\", // กำหนดขนาดให้กระดาน\n//     height: \"800px\"\n//   }}\n// > \n// </div>\n\n\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={piece.id}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: \"grab\",\n//             width: piece.width,\n//             height: piece.height,\n//             zIndex: 10, // ✅ ให้ชิ้นส่วนอยู่ด้านบน\n//           }}\n//           drag={!completed.includes(piece.id)}\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }}\n//           onPointerDown={(event) => event.preventDefault()}\n//           onDragStart={(event) => event.preventDefault()}\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: \"100%\",\n//               height: \"100%\",\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// 3\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\n\nconst NUM_ROWS = 4;\nconst NUM_COLS = 3;\nconst boardImage = \"/img/artboard6.png\"; // ✅ เปลี่ยนเป็น Path รูปของกระดานจริง\n\nexport default function App() {\n  const boardRef = useRef(null);\n  const [pieces, setPieces] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [completed, setCompleted] = useState([]);\n\n  useEffect(() => {\n    if (boardRef.current) {\n      const rect = boardRef.current.getBoundingClientRect();\n\n      // ✅ สร้างตำแหน่งของเป้าหมาย (Target Grid)\n      const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n        id: index,\n        targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n        targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n      }));\n\n      // ✅ สร้างชิ้นจิ๊กซอว์ให้อยู่ฝั่งซ้าย\n      const newPieces = newTargets.map((target, index) => ({\n        ...target,\n        initialX: rect.left - 520 + Math.random() * 230, // กระจายฝั่งซ้าย\n        initialY: rect.top - 0 + Math.random() * 200,\n        image: `/img/puzzle/piece${index + 1}.png`, // ✅ ใส่ path รูปที่ถูกต้อง\n        width: rect.width / NUM_COLS,\n        height: rect.height / NUM_ROWS,\n      }));\n\n      setTargets(newTargets);\n      setPieces(newPieces);\n    }\n  }, []);\n\n  const handleDragEnd = (event, info, piece) => {\n    const target = targets.find((t) => t.id === piece.id);\n\n    if (\n      Math.abs(info.point.x - target.targetX) < piece.width / 3 &&\n      Math.abs(info.point.y - target.targetY) < piece.height / 3\n    ) {\n      setCompleted((prev) => [...prev, piece.id]);\n      setPieces((prev) =>\n        prev.map((p) => (p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p))\n      );\n    }\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"board-container\">\n        {/* ✅ กระดานจิ๊กซอว์ */}\n        <div className=\"board\" ref={boardRef}>\n          <img src={boardImage} alt=\"Puzzle Board\" className=\"board-image\" />\n        </div>\n\n        {/* ✅ ชิ้นจิ๊กซอว์ */}\n        {pieces.map((piece) => (\n          <motion.div\n\n  onPointerDown={(event) => event.preventDefault()}  \n  onDragStart={(event) => event.preventDefault()}\n            key={piece.id}\n            className=\"piece\"\n            style={{\n              width: piece.width,\n              height: piece.height,\n              position: \"absolute\",\n              cursor: \"grab\",\n            }}\n            drag={!completed.includes(piece.id)}\n            dragElastic={0.5}\n            initial={{ x: piece.initialX, y: piece.initialY }}\n            animate={{ x: piece.initialX, y: piece.initialY }}\n            onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n          >\n            <img\n              src={piece.image}\n              alt={`piece-${piece.id}`}\n              style={{\n                width: piece.width, \n                height: piece.height,\n                objectFit: \"contain\",\n              }}\n            />\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,cAAc;AAErB,MAAMC,QAAQ,GAAG,CAAC;AAClB,MAAMC,QAAQ,GAAG,CAAC;AAClB,MAAMC,UAAU,GAAG,oBAAoB,CAAC,CAAC;;AAEzC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,MAAMC,QAAQ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","ignoreList":[]},"metadata":{},"sourceType":"module"}