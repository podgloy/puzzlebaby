{"ast":null,"code":"import _objectSpread from \"/Users/godploy/Downloads/Unknown/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/godploy/Downloads/Unknown/src/App.js\";\n// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡∏¥‡πâ‡∏ô‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ß‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á\n\n// const OFFSET_X = 200; // ‡∏Ç‡∏¢‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô\n// const OFFSET_Y = 100; // ‡∏Ç‡∏¢‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // üî• ‡∏Ç‡∏¢‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // üî• ‡∏Ç‡∏¢‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢\n//     initialX: 500 + Math.random() * 50, // üî• ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ß‡πå\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`üü¢ Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* ‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ‡∏ä‡∏¥‡πâ‡∏ô‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ß‡πå */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ‚úÖ ‡∏•‡πá‡∏≠‡∏Ñ‡∏ä‡∏¥‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ñ‡πâ‡∏≤‡∏•‡∏≤‡∏Å‡πÑ‡∏õ‡∏ß‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î\n//           onPointerDown={(event) => event.preventDefault()} // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Safari ‡∏•‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏≠‡∏≠‡∏Å\n//           onDragStart={(event) => event.preventDefault()} // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\nconst NUM_ROWS = 4;\nconst NUM_COLS = 3;\nconst boardImage = \"/img/puzzleboard.png\"; // üî• ‡πÉ‡∏™‡πà path ‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏ô\n\nexport default function App() {\n  const boardRef = useRef(null);\n  const [pieces, setPieces] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  useEffect(() => {\n    if (boardRef.current) {\n      const rect = boardRef.current.getBoundingClientRect();\n      const newTargets = Array.from({\n        length: NUM_ROWS * NUM_COLS\n      }, (_, index) => ({\n        id: index,\n        targetX: rect.left + index % NUM_COLS * (rect.width / NUM_COLS),\n        targetY: rect.top + Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS)\n      }));\n      const newPieces = newTargets.map(target => _objectSpread(_objectSpread({}, target), {}, {\n        initialX: rect.left + rect.width + Math.random() * 50,\n        // ‡∏ä‡∏¥‡πâ‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤\n        initialY: rect.top + Math.random() * rect.height,\n        image: \"/img/puzzle/piece\".concat(target.id + 1, \".png\"),\n        // üî• ‡∏£‡∏π‡∏õ‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ß‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô\n        width: rect.width / NUM_COLS,\n        // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ä‡∏¥‡πâ‡∏ô\n        height: rect.height / NUM_ROWS\n      }));\n      setTargets(newTargets);\n      setPieces(newPieces);\n    }\n  }, []);\n  const handleDragEnd = (event, info, piece) => {\n    const target = targets.find(t => t.id === piece.id);\n    if (Math.abs(info.point.x - target.targetX) < piece.width / 2 && Math.abs(info.point.y - target.targetY) < piece.height / 2) {\n      setCompleted(prev => [...prev, piece.id]);\n      setPieces(prev => prev.map(p => p.id === piece.id ? _objectSpread(_objectSpread({}, p), {}, {\n        initialX: target.targetX,\n        initialY: target.targetY\n      }) : p));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    ref: boardRef,\n    style: {\n      backgroundImage: \"url(\".concat(boardImage, \")\"),\n      backgroundSize: \"contain\",\n      backgroundPosition: \"center\",\n      backgroundRepeat: \"no-repeat\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }\n  }), pieces.map(piece => /*#__PURE__*/React.createElement(motion.div, {\n    key: piece.id,\n    className: \"piece\",\n    style: {\n      position: \"absolute\",\n      cursor: \"grab\",\n      width: piece.width,\n      height: piece.height\n    },\n    drag: !completed.includes(piece.id),\n    dragElastic: 0.5,\n    initial: {\n      x: piece.initialX,\n      y: piece.initialY\n    },\n    animate: {\n      x: piece.initialX,\n      y: piece.initialY\n    },\n    onPointerDown: event => event.preventDefault(),\n    onDragStart: event => event.preventDefault(),\n    onDragEnd: (event, info) => handleDragEnd(event, info, piece),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: piece.image,\n    alt: \"piece-\".concat(piece.id),\n    style: {\n      width: \"100%\",\n      height: \"100%\",\n      objectFit: \"contain\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 11\n    }\n  }))));\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","NUM_ROWS","NUM_COLS","boardImage","App","boardRef","pieces","setPieces","targets","setTargets","completed","setCompleted","current","rect","getBoundingClientRect","newTargets","Array","from","length","_","index","id","targetX","left","width","targetY","top","Math","floor","height","newPieces","map","target","_objectSpread","initialX","random","initialY","image","concat","handleDragEnd","event","info","piece","find","t","abs","point","x","y","prev","p","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","style","backgroundImage","backgroundSize","backgroundPosition","backgroundRepeat","div","key","position","cursor","drag","includes","dragElastic","initial","animate","onPointerDown","preventDefault","onDragStart","onDragEnd","src","alt","objectFit"],"sources":["/Users/godploy/Downloads/Unknown/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏ä‡∏¥‡πâ‡∏ô‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ß‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏•‡πá‡∏Å‡∏•‡∏á\n\n// const OFFSET_X = 200; // ‡∏Ç‡∏¢‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏ô‡∏ß‡∏ô‡∏≠‡∏ô\n// const OFFSET_Y = 100; // ‡∏Ç‡∏¢‡∏±‡∏ö‡∏ï‡∏≥‡πÅ‡∏´‡∏ô‡πà‡∏á‡πÅ‡∏ô‡∏ß‡∏ï‡∏±‡πâ‡∏á\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // üî• ‡∏Ç‡∏¢‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // üî• ‡∏Ç‡∏¢‡∏±‡∏ö‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢\n//     initialX: 500 + Math.random() * 50, // üî• ‡∏à‡∏∏‡∏î‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏Ç‡∏≠‡∏á‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ß‡πå\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`üü¢ Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* ‡∏Å‡∏£‡∏≠‡∏ö‡πÄ‡∏õ‡πâ‡∏≤‡∏´‡∏°‡∏≤‡∏¢ */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ‡∏ä‡∏¥‡πâ‡∏ô‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ß‡πå */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ‚úÖ ‡∏•‡πá‡∏≠‡∏Ñ‡∏ä‡∏¥‡πâ‡∏ô‡∏™‡πà‡∏ß‡∏ô‡∏ñ‡πâ‡∏≤‡∏•‡∏≤‡∏Å‡πÑ‡∏õ‡∏ß‡∏≤‡∏á‡πÅ‡∏•‡πâ‡∏ß\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏Ñ‡πà‡∏≤‡∏ó‡∏µ‡πà‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î\n//           onPointerDown={(event) => event.preventDefault()} // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô Safari ‡∏•‡∏≤‡∏Å‡∏£‡∏π‡∏õ‡∏≠‡∏≠‡∏Å\n//           onDragStart={(event) => event.preventDefault()} // ‡∏õ‡πâ‡∏≠‡∏á‡∏Å‡∏±‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏£‡∏π‡∏õ‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡πÄ‡∏ß‡πá‡∏ö\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ‚úÖ ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ç‡∏ô‡∏≤‡∏î‡πÄ‡∏õ‡πá‡∏ô‡∏™‡∏±‡∏î‡∏™‡πà‡∏ß‡∏ô\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\n\nconst NUM_ROWS = 4;\nconst NUM_COLS = 3;\nconst boardImage = \"/img/puzzleboard.png\"; // üî• ‡πÉ‡∏™‡πà path ‡∏Ç‡∏≠‡∏á‡∏Å‡∏£‡∏∞‡∏î‡∏≤‡∏ô\n\nexport default function App() {\n  const boardRef = useRef(null);\n  const [pieces, setPieces] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [completed, setCompleted] = useState([]);\n\n  useEffect(() => {\n    if (boardRef.current) {\n      const rect = boardRef.current.getBoundingClientRect();\n\n      const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n        id: index,\n        targetX: rect.left + (index % NUM_COLS) * (rect.width / NUM_COLS),\n        targetY: rect.top + Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n      }));\n\n      const newPieces = newTargets.map((target) => ({\n        ...target,\n        initialX: rect.left + rect.width + Math.random() * 50, // ‡∏ä‡∏¥‡πâ‡∏ô‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏î‡πâ‡∏≤‡∏ô‡∏Ç‡∏ß‡∏≤\n        initialY: rect.top + Math.random() * rect.height,\n        image: `/img/puzzle/piece${target.id + 1}.png`, // üî• ‡∏£‡∏π‡∏õ‡∏à‡∏¥‡πä‡∏Å‡∏ã‡∏≠‡∏ß‡πå‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏ä‡∏¥‡πâ‡∏ô\n        width: rect.width / NUM_COLS, // ‡∏Ç‡∏ô‡∏≤‡∏î‡∏Ç‡∏≠‡∏á‡∏ä‡∏¥‡πâ‡∏ô\n        height: rect.height / NUM_ROWS,\n      }));\n\n      setTargets(newTargets);\n      setPieces(newPieces);\n    }\n  }, []);\n\n  const handleDragEnd = (event, info, piece) => {\n    const target = targets.find((t) => t.id === piece.id);\n\n    if (\n      Math.abs(info.point.x - target.targetX) < piece.width / 2 &&\n      Math.abs(info.point.y - target.targetY) < piece.height / 2\n    ) {\n      setCompleted((prev) => [...prev, piece.id]);\n      setPieces((prev) =>\n        prev.map((p) => (p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p))\n      );\n    }\n  };\n\n  return (\n    <div className=\"board-container\">\n      <div\n        className=\"board\"\n        ref={boardRef}\n        style={{\n          backgroundImage: `url(${boardImage})`,\n          backgroundSize: \"contain\",\n          backgroundPosition: \"center\",\n          backgroundRepeat: \"no-repeat\",\n        }}\n      />\n\n      {pieces.map((piece) => (\n        <motion.div\n          key={piece.id}\n          className=\"piece\"\n          style={{\n            position: \"absolute\",\n            cursor: \"grab\",\n            width: piece.width,\n            height: piece.height,\n          }}\n          drag={!completed.includes(piece.id)}\n          dragElastic={0.5}\n          initial={{ x: piece.initialX, y: piece.initialY }}\n          animate={{ x: piece.initialX, y: piece.initialY }}\n          onPointerDown={(event) => event.preventDefault()}\n          onDragStart={(event) => event.preventDefault()}\n          onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n        >\n          <img\n            src={piece.image}\n            alt={`piece-${piece.id}`}\n            style={{\n              width: \"100%\",\n              height: \"100%\",\n              objectFit: \"contain\",\n            }}\n          />\n        </motion.div>\n      ))}\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}