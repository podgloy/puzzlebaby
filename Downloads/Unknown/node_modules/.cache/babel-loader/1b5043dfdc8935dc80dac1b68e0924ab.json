{"ast":null,"code":"import _objectSpread from \"/Users/godploy/Downloads/Unknown/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/Users/godploy/Downloads/Unknown/src/App.js\";\n// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ขนาดชิ้นจิ๊กซอว์ที่เล็กลง\n\n// const OFFSET_X = 200; // ขยับตำแหน่งแนวนอน\n// const OFFSET_Y = 100; // ขยับตำแหน่งแนวตั้ง\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // 🔥 ขยับกรอบเป้าหมาย\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // 🔥 ขยับกรอบเป้าหมาย\n//     initialX: 500 + Math.random() * 50, // 🔥 จุดเริ่มต้นของจิ๊กซอว์\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`🟢 Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* กรอบเป้าหมาย */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ชิ้นจิ๊กซอว์ */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ✅ ล็อคชิ้นส่วนถ้าลากไปวางแล้ว\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ✅ ใช้ค่าที่อัปเดตล่าสุด\n//           onPointerDown={(event) => event.preventDefault()} // ป้องกัน Safari ลากรูปออก\n//           onDragStart={(event) => event.preventDefault()} // ป้องกันการดึงรูปออกจากเว็บ\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ✅ กำหนดขนาดเป็นสัดส่วน\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// 2\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const boardImage = \"/img/puzzleboard.png\";\n\n// export default function App() {\n//   const boardRef = useRef(null);\n//   const [pieces, setPieces] = useState([]);\n//   const [targets, setTargets] = useState([]);\n//   const [completed, setCompleted] = useState([]);\n\n//   useEffect(() => {\n//     if (boardRef.current) {\n//       const rect = boardRef.current.getBoundingClientRect();\n\n//       // ✅ คำนวณตำแหน่งของเป้าหมายบนกระดาน\n//       const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//         id: index,\n//         targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n//         targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n//       }));\n\n//       // ✅ กระจายชิ้นส่วนอยู่ด้านซ้ายของกระดาน\n//       const newPieces = newTargets.map((target, index) => ({\n//         ...target,\n//         initialX: rect.left - 200 + (index % 2) * 50, // 🔥 ปรับให้อยู่ฝั่งซ้าย\n//         initialY: rect.top + Math.random() * (rect.height - 100),\n//         image: `/img/puzzle/piece${target.id + 1}.png`,\n//         width: rect.width / NUM_COLS,\n//         height: rect.height / NUM_ROWS,\n//       }));\n\n//       setTargets(newTargets);\n//       setPieces(newPieces);\n//     }\n//   }, []);\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = targets.find((t) => t.id === piece.id);\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < piece.width / 2 &&\n//       Math.abs(info.point.y - target.targetY) < piece.height / 2\n//     ) {\n//       setCompleted((prev) => [...prev, piece.id]);\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div \n//   className=\"board\" \n//   ref={boardRef}\n//   style={{\n//     backgroundImage: `url(${boardImage})`,\n//     backgroundSize: \"contain\",\n//     backgroundPosition: \"center\",\n//     backgroundRepeat: \"no-repeat\",\n//     width: \"600px\", // กำหนดขนาดให้กระดาน\n//     height: \"800px\"\n//   }}\n// > \n// </div>\n\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={piece.id}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: \"grab\",\n//             width: piece.width,\n//             height: piece.height,\n//             zIndex: 10, // ✅ ให้ชิ้นส่วนอยู่ด้านบน\n//           }}\n//           drag={!completed.includes(piece.id)}\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }}\n//           onPointerDown={(event) => event.preventDefault()}\n//           onDragStart={(event) => event.preventDefault()}\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: \"100%\",\n//               height: \"100%\",\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// 3\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\nconst boardImage = \"/img/artboard6.png\"; // ✅ เปลี่ยนเป็น Path รูปของกระดานจริง\n\nexport default function App() {\n  const boardRef = useRef(null);\n  const [pieces, setPieces] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [completed, setCompleted] = useState([]);\n  useEffect(() => {\n    if (boardRef.current) {\n      const rect = boardRef.current.getBoundingClientRect();\n\n      // ✅ สร้างตำแหน่งของเป้าหมาย (Target Grid)\n      // const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n      //   id: index,\n      //   targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n      //   targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n      // }));\n      const newTargets = [{\n        id: 0,\n        targetX: rect.left + 495.2,\n        targetY: rect.top + 118\n      },\n      // 🔹 ชิ้นที่ 1\n      {\n        id: 1,\n        targetX: rect.left + 604.9,\n        targetY: rect.top + 130\n      },\n      // 🔹 ชิ้นที่ 2\n      {\n        id: 2,\n        targetX: rect.left + 735,\n        targetY: rect.top + 103\n      },\n      // 🔹 ชิ้นที่ 3\n      {\n        id: 3,\n        targetX: rect.left + 502,\n        targetY: rect.top + 228\n      },\n      // 🔹 ชิ้นที่ 4\n      {\n        id: 4,\n        targetX: rect.left + 620,\n        targetY: rect.top + 250\n      },\n      // 🔹 ชิ้นที่ 5\n      {\n        id: 5,\n        targetX: rect.left + 743,\n        targetY: rect.top + 214\n      },\n      // 🔹 ชิ้นที่ 6\n      {\n        id: 6,\n        targetX: rect.left + 528,\n        targetY: rect.top + 358\n      },\n      // 🔹 ชิ้นที่ 7\n      {\n        id: 7,\n        targetX: rect.left + 658,\n        targetY: rect.top + 390\n      },\n      // 🔹 ชิ้นที่ 8\n      {\n        id: 8,\n        targetX: rect.left + 770,\n        targetY: rect.top + 364\n      },\n      // 🔹 ชิ้นที่ 9\n      {\n        id: 9,\n        targetX: rect.left + 500,\n        targetY: rect.top + 500\n      },\n      // 🔹 ชิ้นที่ 10         \n      {\n        id: 10,\n        targetX: rect.left + 0,\n        targetY: rect.top + 200\n      },\n      // 🔹 ชิ้นที่ 11\n      {\n        id: 11,\n        targetX: rect.left + 0,\n        targetY: rect.top + 200\n      } // 🔹 ชิ้นที่ 12         \n      // { id: 12, targetX: rect.left + 350, targetY: rect.top + 200 }, // 🔹 ชิ้นที่ 6\n      ];\n\n      // ✅ สร้างชิ้นจิ๊กซอว์ให้อยู่ฝั่งซ้าย\n      const newPieces = newTargets.map((target, index) => _objectSpread(_objectSpread({}, target), {}, {\n        initialX: rect.left - 520 + Math.random() * 230,\n        // กระจายฝั่งซ้าย\n        initialY: rect.top - 0 + Math.random() * 200,\n        image: \"/img/puzzle/artboard\".concat(index + 1, \".png\"),\n        // ✅ ใส่ path รูปที่ถูกต้อง\n        // width: rect.width / NUM_COLS,\n        // height: rect.height / NUM_ROWS,\n        width: 218,\n        // ✅ แก้ขนาดให้ตรงกับ Artboard\n        height: 218\n      }));\n      setTargets(newTargets);\n      setPieces(newPieces);\n    }\n  }, []);\n  const handleDragEnd = (event, info, piece) => {\n    const target = targets.find(t => t.id === piece.id);\n\n    // const distanceX = Math.abs(info.point.x - target.targetX);\n    // const distanceY = Math.abs(info.point.y - target.targetY);\n\n    if (Math.abs(info.point.x - target.targetX) < piece.width / 3 && Math.abs(info.point.y - target.targetY) < piece.height / 3) {\n      setCompleted(prev => [...prev, piece.id]);\n      setPieces(prev => prev.map(p => p.id === piece.id ? _objectSpread(_objectSpread({}, p), {}, {\n        initialX: target.targetX,\n        initialY: target.targetY,\n        rotate: 3,\n        isLocked: true\n      }) : p));\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"board\",\n    ref: boardRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: boardImage,\n    alt: \"Puzzle Board\",\n    className: \"board-image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 11\n    }\n  }), targets.map(target => /*#__PURE__*/React.createElement(\"div\", {\n    key: target.id,\n    className: \"target\",\n    style: {\n      left: target.targetX,\n      top: target.targetY,\n      width: 218,\n      // ✅ ให้ขนาดเท่ากับชิ้นจิ๊กซอว์\n      height: 218,\n      position: \"absolute\",\n      border: \"2px dashed rgba(255, 0, 0, 0.5)\",\n      // ✅ เพิ่มสีแดงโปร่งแสง\n      backgroundColor: \"rgba(255, 0, 0, 0.1)\" // ✅ ให้มีสีจางๆ เพื่อให้เห็นเป้าหมาย\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 3\n    }\n  }))), pieces.map(piece => /*#__PURE__*/React.createElement(motion.div, {\n    onPointerDown: event => event.preventDefault(),\n    onDragStart: event => event.preventDefault(),\n    key: piece.id,\n    className: \"piece\",\n    style: {\n      width: piece.width,\n      height: piece.height,\n      position: \"absolute\",\n      cursor: \"grab\"\n    },\n    drag: !piece.isLocked\n    // drag={!completed.includes(piece.id)}\n    ,\n    dragElastic: 0.5,\n    initial: {\n      x: piece.initialX,\n      y: piece.initialY\n    },\n    animate: {\n      x: piece.initialX,\n      y: piece.initialY\n    },\n    onDragEnd: (event, info) => handleDragEnd(event, info, piece),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: piece.image,\n    alt: \"piece-\".concat(piece.id),\n    style: {\n      width: piece.width,\n      height: piece.height,\n      objectFit: \"contain\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"names":["React","useState","useEffect","useRef","motion","boardImage","App","boardRef","pieces","setPieces","targets","setTargets","completed","setCompleted","current","rect","getBoundingClientRect","newTargets","id","targetX","left","targetY","top","newPieces","map","target","index","_objectSpread","initialX","Math","random","initialY","image","concat","width","height","handleDragEnd","event","info","piece","find","t","abs","point","x","y","prev","p","rotate","isLocked","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","ref","src","alt","key","style","position","border","backgroundColor","div","onPointerDown","preventDefault","onDragStart","cursor","drag","dragElastic","initial","animate","onDragEnd","objectFit"],"sources":["/Users/godploy/Downloads/Unknown/src/App.js"],"sourcesContent":["// import React, { useState } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const PIECE_SIZE = 80; // ขนาดชิ้นจิ๊กซอว์ที่เล็กลง\n\n// const OFFSET_X = 200; // ขยับตำแหน่งแนวนอน\n// const OFFSET_Y = 100; // ขยับตำแหน่งแนวตั้ง\n\n// const createGrid = () =>\n//   Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//     id: index,\n//     targetX: (index % NUM_COLS) * 100 + OFFSET_X, // 🔥 ขยับกรอบเป้าหมาย\n//     targetY: Math.floor(index / NUM_COLS) * 100 + OFFSET_Y, // 🔥 ขยับกรอบเป้าหมาย\n//     initialX: 500 + Math.random() * 50, // 🔥 จุดเริ่มต้นของจิ๊กซอว์\n//     initialY: 300 + Math.random() * 50,\n//     image: `/img/puzzle/piece${index + 1}.png`, \n//   }));\n\n\n// export default function App() {\n//   const [pieces, setPieces] = useState(createGrid());\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = pieces.find((p) => p.id === piece.id);\n\n//     console.log(`🟢 Piece ${piece.id} Dragged to:`, {\n//       draggedX: info.point.x,\n//       draggedY: info.point.y,\n//       targetX: target.targetX,\n//       targetY: target.targetY,\n//     });\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < PIECE_SIZE * 0.75 &&\n//       Math.abs(info.point.y - target.targetY) < PIECE_SIZE * 0.75\n//     )\n//      {\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id\n//             ? { ...p, initialX: target.targetX, initialY: target.targetY, locked: true }\n//             : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"board\" style={{ position: \"relative\", width: \"100vw\", height: \"100vh\" }}>\n//       {/* กรอบเป้าหมาย */}\n//       {pieces.map((piece) => (\n//         <div\n//           key={`target-${piece.id}`}\n//           className=\"target\"\n//           style={{\n//             left: piece.targetX,\n//             top: piece.targetY,\n//             width: PIECE_SIZE,\n//             height: PIECE_SIZE,\n//             position: \"absolute\",\n//             border: \"2px dashed #ccc\",\n//           }}\n//         />\n//       ))}\n\n//       {/* ชิ้นจิ๊กซอว์ */}\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={`piece-${piece.id}`}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: piece.locked ? \"default\" : \"grab\",\n//           }}\n//           drag={!piece.locked} // ✅ ล็อคชิ้นส่วนถ้าลากไปวางแล้ว\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }} // ✅ ใช้ค่าที่อัปเดตล่าสุด\n//           onPointerDown={(event) => event.preventDefault()} // ป้องกัน Safari ลากรูปออก\n//           onDragStart={(event) => event.preventDefault()} // ป้องกันการดึงรูปออกจากเว็บ\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: `${PIECE_SIZE}px`, // ✅ กำหนดขนาดเป็นสัดส่วน\n//               height: `${PIECE_SIZE}px`,\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// 2\n\n// import React, { useState, useEffect, useRef } from \"react\";\n// import { motion } from \"framer-motion\";\n// import \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\n// const boardImage = \"/img/puzzleboard.png\";\n\n// export default function App() {\n//   const boardRef = useRef(null);\n//   const [pieces, setPieces] = useState([]);\n//   const [targets, setTargets] = useState([]);\n//   const [completed, setCompleted] = useState([]);\n\n//   useEffect(() => {\n//     if (boardRef.current) {\n//       const rect = boardRef.current.getBoundingClientRect();\n\n//       // ✅ คำนวณตำแหน่งของเป้าหมายบนกระดาน\n//       const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n//         id: index,\n//         targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n//         targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n//       }));\n\n//       // ✅ กระจายชิ้นส่วนอยู่ด้านซ้ายของกระดาน\n//       const newPieces = newTargets.map((target, index) => ({\n//         ...target,\n//         initialX: rect.left - 200 + (index % 2) * 50, // 🔥 ปรับให้อยู่ฝั่งซ้าย\n//         initialY: rect.top + Math.random() * (rect.height - 100),\n//         image: `/img/puzzle/piece${target.id + 1}.png`,\n//         width: rect.width / NUM_COLS,\n//         height: rect.height / NUM_ROWS,\n//       }));\n\n//       setTargets(newTargets);\n//       setPieces(newPieces);\n//     }\n//   }, []);\n\n//   const handleDragEnd = (event, info, piece) => {\n//     const target = targets.find((t) => t.id === piece.id);\n\n//     if (\n//       Math.abs(info.point.x - target.targetX) < piece.width / 2 &&\n//       Math.abs(info.point.y - target.targetY) < piece.height / 2\n//     ) {\n//       setCompleted((prev) => [...prev, piece.id]);\n//       setPieces((prev) =>\n//         prev.map((p) =>\n//           p.id === piece.id ? { ...p, initialX: target.targetX, initialY: target.targetY } : p\n//         )\n//       );\n//     }\n//   };\n\n//   return (\n//     <div className=\"container\">\n//       <div \n//   className=\"board\" \n//   ref={boardRef}\n//   style={{\n//     backgroundImage: `url(${boardImage})`,\n//     backgroundSize: \"contain\",\n//     backgroundPosition: \"center\",\n//     backgroundRepeat: \"no-repeat\",\n//     width: \"600px\", // กำหนดขนาดให้กระดาน\n//     height: \"800px\"\n//   }}\n// > \n// </div>\n\n\n//       {pieces.map((piece) => (\n//         <motion.div\n//           key={piece.id}\n//           className=\"piece\"\n//           style={{\n//             position: \"absolute\",\n//             cursor: \"grab\",\n//             width: piece.width,\n//             height: piece.height,\n//             zIndex: 10, // ✅ ให้ชิ้นส่วนอยู่ด้านบน\n//           }}\n//           drag={!completed.includes(piece.id)}\n//           dragElastic={0.5}\n//           initial={{ x: piece.initialX, y: piece.initialY }}\n//           animate={{ x: piece.initialX, y: piece.initialY }}\n//           onPointerDown={(event) => event.preventDefault()}\n//           onDragStart={(event) => event.preventDefault()}\n//           onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n//         >\n//           <img\n//             src={piece.image}\n//             alt={`piece-${piece.id}`}\n//             style={{\n//               width: \"100%\",\n//               height: \"100%\",\n//               objectFit: \"contain\",\n//             }}\n//           />\n//         </motion.div>\n//       ))}\n//     </div>\n//   );\n// }\n\n// 3\n\nimport React, { useState, useEffect, useRef } from \"react\";\nimport { motion } from \"framer-motion\";\nimport \"./styles.css\";\n\n// const NUM_ROWS = 4;\n// const NUM_COLS = 3;\nconst boardImage = \"/img/artboard6.png\"; // ✅ เปลี่ยนเป็น Path รูปของกระดานจริง\n\nexport default function App() {\n  const boardRef = useRef(null);\n  const [pieces, setPieces] = useState([]);\n  const [targets, setTargets] = useState([]);\n  const [completed, setCompleted] = useState([]);\n\n  useEffect(() => {\n    if (boardRef.current) {\n      const rect = boardRef.current.getBoundingClientRect();\n\n      // ✅ สร้างตำแหน่งของเป้าหมาย (Target Grid)\n      // const newTargets = Array.from({ length: NUM_ROWS * NUM_COLS }, (_, index) => ({\n      //   id: index,\n      //   targetX: (index % NUM_COLS) * (rect.width / NUM_COLS),\n      //   targetY: Math.floor(index / NUM_COLS) * (rect.height / NUM_ROWS),\n      // }));\n      const newTargets = [\n        { id: 0, targetX: rect.left + 495.2, targetY: rect.top + 118 },  // 🔹 ชิ้นที่ 1\n        { id: 1, targetX: rect.left + 604.9, targetY: rect.top + 130 }, // 🔹 ชิ้นที่ 2\n        { id: 2, targetX: rect.left + 735, targetY: rect.top + 103 }, // 🔹 ชิ้นที่ 3\n        { id: 3, targetX: rect.left + 502, targetY: rect.top + 228 }, // 🔹 ชิ้นที่ 4\n        { id: 4, targetX: rect.left + 620, targetY: rect.top + 250 }, // 🔹 ชิ้นที่ 5\n        { id: 5, targetX: rect.left + 743, targetY: rect.top + 214 }, // 🔹 ชิ้นที่ 6\n        { id: 6, targetX: rect.left + 528, targetY: rect.top + 358 },  // 🔹 ชิ้นที่ 7\n        { id: 7, targetX: rect.left + 658, targetY: rect.top + 390 }, // 🔹 ชิ้นที่ 8\n        { id: 8, targetX: rect.left + 770, targetY: rect.top + 364 }, // 🔹 ชิ้นที่ 9\n        { id: 9, targetX: rect.left + 500, targetY: rect.top + 500 }, // 🔹 ชิ้นที่ 10         \n        { id: 10, targetX: rect.left + 0, targetY: rect.top + 200 }, // 🔹 ชิ้นที่ 11\n        { id: 11, targetX: rect.left + 0, targetY: rect.top + 200 }, // 🔹 ชิ้นที่ 12         \n        // { id: 12, targetX: rect.left + 350, targetY: rect.top + 200 }, // 🔹 ชิ้นที่ 6\n    \n      ];\n  \n\n      // ✅ สร้างชิ้นจิ๊กซอว์ให้อยู่ฝั่งซ้าย\n      const newPieces = newTargets.map((target, index) => ({\n        ...target,\n        initialX: rect.left - 520 + Math.random() * 230, // กระจายฝั่งซ้าย\n        initialY: rect.top - 0 + Math.random() * 200,\n        image: `/img/puzzle/artboard${index + 1}.png`, // ✅ ใส่ path รูปที่ถูกต้อง\n        // width: rect.width / NUM_COLS,\n        // height: rect.height / NUM_ROWS,\n        width: 218,  // ✅ แก้ขนาดให้ตรงกับ Artboard\n        height: 218\n      }));\n\n      setTargets(newTargets);\n      setPieces(newPieces);\n    }\n  }, []);\n\n  const handleDragEnd = (event, info, piece) => {\n    const target = targets.find((t) => t.id === piece.id);\n\n    // const distanceX = Math.abs(info.point.x - target.targetX);\n    // const distanceY = Math.abs(info.point.y - target.targetY);\n\n    if (\n      Math.abs(info.point.x - target.targetX) < piece.width / 3 && \n      Math.abs(info.point.y - target.targetY) < piece.height / 3\n    ) {\n      setCompleted((prev) => [...prev, piece.id]);  \n    \n    setPieces((prev) =>\n      prev.map((p) =>\n        p.id === piece.id\n          ? { ...p, \n            initialX: target.targetX, \n            initialY: target.targetY, \n            rotate: 3,\n            isLocked: true, }\n          : p\n      )\n    );\n  }\n};\n\n  return (\n    <div className=\"container\">\n      <div className=\"board-container\">\n        {/* ✅ กระดานจิ๊กซอว์ */}\n        <div className=\"board\" ref={boardRef}>\n          <img src={boardImage} alt=\"Puzzle Board\" className=\"board-image\" />\n          \n          {targets.map((target) => (\n  <div\n    key={target.id}\n    className=\"target\"\n    style={{\n      left: target.targetX,\n      top: target.targetY,\n      width: 218, // ✅ ให้ขนาดเท่ากับชิ้นจิ๊กซอว์\n      height: 218,\n      position: \"absolute\",\n      border: \"2px dashed rgba(255, 0, 0, 0.5)\",  // ✅ เพิ่มสีแดงโปร่งแสง\n      backgroundColor: \"rgba(255, 0, 0, 0.1)\",  // ✅ ให้มีสีจางๆ เพื่อให้เห็นเป้าหมาย\n    }}\n  />\n))}\n\n</div>\n\n        {/* ✅ ชิ้นจิ๊กซอว์ */}\n        {pieces.map((piece) => (\n          <motion.div\n            onPointerDown={(event) => event.preventDefault()}  \n            onDragStart={(event) => event.preventDefault()}\n            key={piece.id}\n            className=\"piece\"\n            style={{\n              width: piece.width,\n              height: piece.height,\n              position: \"absolute\",\n              cursor: \"grab\",\n            }}\n            drag={!piece.isLocked}\n            // drag={!completed.includes(piece.id)}\n            dragElastic={0.5}\n            initial={{ x: piece.initialX, y: piece.initialY }}\n            animate={{ x: piece.initialX, y: piece.initialY }}\n            onDragEnd={(event, info) => handleDragEnd(event, info, piece)}\n          >\n            <img\n              src={piece.image}\n              alt={`piece-${piece.id}`}\n              style={{\n                width: piece.width, \n                height: piece.height,\n                objectFit: \"contain\",\n              }}\n            />\n          </motion.div>\n        ))}\n      </div>\n    </div>\n  );\n\n}\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAC1D,SAASC,MAAM,QAAQ,eAAe;AACtC,OAAO,cAAc;;AAErB;AACA;AACA,MAAMC,UAAU,GAAG,oBAAoB,CAAC,CAAC;;AAEzC,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,MAAMC,QAAQ,GAAGJ,MAAM,CAAC,IAAI,CAAC;EAC7B,MAAM,CAACK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","ignoreList":[]},"metadata":{},"sourceType":"module"}