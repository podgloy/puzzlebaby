{"map":"{\"version\":3,\"sources\":[\"/Users/godploy/Downloads/Unknown/src/App.js\",\"/Users/godploy/Downloads/Unknown/src/use-viewport-width.js\",\"/Users/godploy/Downloads/Unknown/src/index.js\"],\"names\":[\"App\",\"viewportWidth\",\"useRef\",\"useEffect\",\"updateViewportWidth\",\"current\",\"window\",\"innerWidth\",\"addEventListener\",\"useViewportWidth\",\"activeHalf\",\"setActiveHalf\",\"useState\",\"onViewportBoxUpdate\",\"_ref\",\"x\",\"halfViewport\",\"min\",\"max\",\"React\",\"createElement\",\"AnimateSharedLayout\",\"className\",\"Zone\",\"color\",\"isSelected\",\"_ref2\",\"motion\",\"div\",\"layoutId\",\"initial\",\"animate\",\"backgroundColor\",\"drag\",\"dragConstraints\",\"top\",\"left\",\"right\",\"bottom\",\"dragElastic\",\"rootElement\",\"document\",\"getElementById\",\"ReactDOM\",\"render\",\"StrictMode\"],\"mappings\":\"sKAkBe,SAASA,IACtB,MAAMC,ECjBD,WACL,MAAMA,EAAgBC,OAAAA,EAAAA,OAAAA,CAAO,GAY7B,OAVAC,OAAAA,EAAAA,UAAAA,CAAU,KACR,MAAMC,EAAsBA,KAC1BH,EAAcI,QAAUC,OAAOC,YAGjCH,IAEAE,OAAOE,iBAAiB,SAAUJ,IACjC,IAEIH,EDIeQ,IACfC,EAAYC,GAAiBC,OAAAA,EAAAA,SAAAA,CAAS,KAEvCC,EAAsBC,IAAW,IAAVC,EAAEA,GAAGD,EAChC,MAAME,EAAef,EAAcI,QAAU,EAE1B,MAAfK,GAAsBK,EAAEE,IAAMD,EAChCL,EAAc,KACU,MAAfD,GAAsBK,EAAEG,IAAMF,GACvCL,EAAc,MAIlB,OACEQ,EAAAA,EAAAC,cAACC,EAAAA,EAAmB,KAClBF,EAAAA,EAAAC,cAAA,MAAA,CAAKE,UAAU,aACbH,EAAAA,EAAAC,cAACG,EAAI,CACHC,MAAM,UACNC,WAA2B,MAAff,EACZG,oBAAqBA,IAEvBM,EAAAA,EAAAC,cAACG,EAAI,CACHC,MAAM,UACNC,WAA2B,MAAff,EACZG,oBAAqBA,MAO/B,SAASU,EAAIG,GAA6C,IAA5CF,MAAEA,EAAKC,WAAEA,EAAUZ,oBAAEA,GAAqBa,EACtD,OACEP,EAAAA,EAAAC,cAAA,MAAA,CAAKE,UAAU,kBACbH,EAAAA,EAAAC,cAACO,EAAAA,EAAOC,IAAG,CAACN,UAAU,YACrBG,GACCN,EAAAA,EAAAC,cAACO,EAAAA,EAAOC,IAAG,CACTN,UAAU,MACVO,SAAS,MACTC,SAAS,EACTC,QAAS,CAAEC,gBAAiBR,GAC5BS,MAAI,EAEJC,gBAAiB,CAAEC,IAAK,EAAGC,KAAM,EAAGC,MAAO,EAAGC,OAAQ,GAEtDC,YAAa,EACb1B,oBAAqBA,KE5D/B,MAAM2B,EAAcC,SAASC,eAAe,QAC5CC,EAAAA,EAASC,OACPzB,EAAAA,EAAAC,cAACD,EAAAA,EAAM0B,WAAU,KACf1B,EAAAA,EAAAC,cAACpB,EAAG,OAENwC\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport { useState } from \\\"react\\\";\\nimport { motion, AnimateSharedLayout } from \\\"framer-motion\\\";\\nimport { useViewportWidth } from \\\"./use-viewport-width\\\";\\nimport \\\"./styles.css\\\";\\n\\n/**\\n * NOTICE: This won't work in later versions of Framer Motion. The\\n * shared drag gesture was never widely used. But we may add it back\\n * some time in the future.\\n *\\n * This is an example of a shared drag gesture in Framer Motion 2.\\n *\\n * When the box is dragged from one half to the other, it gets\\n * removed from one component and added in the other. This isn't\\n * the same box - it is two seperate components that share a layoutId.\\n */\\n\\nexport default function App() {\\n  const viewportWidth = useViewportWidth();\\n  const [activeHalf, setActiveHalf] = useState(\\\"a\\\");\\n\\n  const onViewportBoxUpdate = ({ x }) => {\\n    const halfViewport = viewportWidth.current / 2;\\n\\n    if (activeHalf === \\\"a\\\" && x.min > halfViewport) {\\n      setActiveHalf(\\\"b\\\");\\n    } else if (activeHalf === \\\"b\\\" && x.max < halfViewport) {\\n      setActiveHalf(\\\"a\\\");\\n    }\\n  };\\n\\n  return (\\n    <AnimateSharedLayout>\\n      <div className=\\\"container\\\">\\n        <Zone\\n          color=\\\"#f107a3\\\"\\n          isSelected={activeHalf === \\\"a\\\"}\\n          onViewportBoxUpdate={onViewportBoxUpdate}\\n        />\\n        <Zone\\n          color=\\\"#7b2ff7\\\"\\n          isSelected={activeHalf === \\\"b\\\"}\\n          onViewportBoxUpdate={onViewportBoxUpdate}\\n        />\\n      </div>\\n    </AnimateSharedLayout>\\n  );\\n}\\n\\nfunction Zone({ color, isSelected, onViewportBoxUpdate }) {\\n  return (\\n    <div className=\\\"half-container\\\">\\n      <motion.div className=\\\"overlay\\\" />\\n      {isSelected && (\\n        <motion.div\\n          className=\\\"box\\\"\\n          layoutId=\\\"box\\\"\\n          initial={false}\\n          animate={{ backgroundColor: color }}\\n          drag\\n          // Snap the box back to its center when we let go\\n          dragConstraints={{ top: 0, left: 0, right: 0, bottom: 0 }}\\n          // Allow full movememnt outside constraints\\n          dragElastic={1}\\n          onViewportBoxUpdate={onViewportBoxUpdate}\\n        />\\n      )}\\n    </div>\\n  );\\n}\\n\",\"import { useEffect, useRef } from \\\"react\\\";\\n\\nexport function useViewportWidth() {\\n  const viewportWidth = useRef(0);\\n\\n  useEffect(() => {\\n    const updateViewportWidth = () => {\\n      viewportWidth.current = window.innerWidth;\\n    };\\n\\n    updateViewportWidth();\\n\\n    window.addEventListener(\\\"resize\\\", updateViewportWidth);\\n  }, []);\\n\\n  return viewportWidth;\\n}\\n\",\"import React from \\\"react\\\";\\nimport ReactDOM from \\\"react-dom\\\";\\n\\nimport App from \\\"./App\\\";\\n\\nconst rootElement = document.getElementById(\\\"root\\\");\\nReactDOM.render(\\n  <React.StrictMode>\\n    <App />\\n  </React.StrictMode>,\\n  rootElement\\n);\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],{10:function(e,t,n){},11:function(e,t,n){\"use strict\";n.r(t);var a=n(0),o=n.n(a),r=n(4),c=n.n(r),i=n(1);n(10);function l(){const e=function(){const e=Object(a.useRef)(0);return Object(a.useEffect)(()=>{const t=()=>{e.current=window.innerWidth};t(),window.addEventListener(\"resize\",t)},[]),e}(),[t,n]=Object(a.useState)(\"a\"),r=a=>{let{x:o}=a;const r=e.current/2;\"a\"===t&&o.min>r?n(\"b\"):\"b\"===t&&o.max<r&&n(\"a\")};return o.a.createElement(i.a,null,o.a.createElement(\"div\",{className:\"container\"},o.a.createElement(s,{color:\"#f107a3\",isSelected:\"a\"===t,onViewportBoxUpdate:r}),o.a.createElement(s,{color:\"#7b2ff7\",isSelected:\"b\"===t,onViewportBoxUpdate:r})))}function s(e){let{color:t,isSelected:n,onViewportBoxUpdate:a}=e;return o.a.createElement(\"div\",{className:\"half-container\"},o.a.createElement(i.b.div,{className:\"overlay\"}),n&&o.a.createElement(i.b.div,{className:\"box\",layoutId:\"box\",initial:!1,animate:{backgroundColor:t},drag:!0,dragConstraints:{top:0,left:0,right:0,bottom:0},dragElastic:1,onViewportBoxUpdate:a}))}const d=document.getElementById(\"root\");c.a.render(o.a.createElement(o.a.StrictMode,null,o.a.createElement(l,null)),d)},5:function(e,t,n){e.exports=n(11)}},[[5,1,2]]]);","extractedComments":[]}